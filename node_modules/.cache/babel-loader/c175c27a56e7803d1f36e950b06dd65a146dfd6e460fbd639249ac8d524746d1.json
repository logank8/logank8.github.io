{"ast":null,"code":"import'./App.css';import React,{useEffect,useState}from'react';import Navbar from'./components/Navbar';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import Home from'./pages';import Projects from'./pages/projects';import Contact from'./pages/contact';import Blog from'./pages/blog';import{application}from'express';// to do:\n// fix hamburger menu\n// add content to screens\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[message,setMessage]=useState('');useEffect(()=>{fetch('/').then(res=>res.text()).then(data=>setMessage(data)).catch(err=>console.log(message));},[]);// this is where we'll get the res.send output sent from server.js\nreturn/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/blog\",element:/*#__PURE__*/_jsx(Blog,{})}),/*#__PURE__*/_jsx(Route,{path:\"/projects\",element:/*#__PURE__*/_jsx(Projects,{})}),/*#__PURE__*/_jsx(Route,{path:\"/contact\",element:/*#__PURE__*/_jsx(Contact,{})})]})]});}export default App;// pass data values to Home, Blog, etc.\n//","map":{"version":3,"names":["React","useEffect","useState","Navbar","BrowserRouter","Router","Routes","Route","Home","Projects","Contact","Blog","application","jsx","_jsx","jsxs","_jsxs","App","message","setMessage","fetch","then","res","text","data","catch","err","console","log","children","path","exact","element"],"sources":["/Users/erinkeener/Downloads/GitHub/testrepo-1/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useEffect, useState} from 'react';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './pages';\nimport Projects from './pages/projects';\nimport Contact from './pages/contact';\nimport Blog from './pages/blog';\nimport { application } from 'express';\n\n// to do:\n// fix hamburger menu\n// add content to screens\nfunction App() {\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    fetch('/')\n      .then((res) => res.text())\n      .then((data) => setMessage(data))\n      .catch((err) => console.log(message));\n  }, []);\n  // this is where we'll get the res.send output sent from server.js\n\n\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route path='/' exact element={<Home />}></Route>\n        <Route path='/blog' element={<Blog />} ></Route>\n        <Route path='/projects' element={<Projects />} ></Route>\n        <Route path='/contact' element={<Contact />} ></Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n\n// pass data values to Home, Blog, etc.\n// \n"],"mappings":"AAAA,MAAO,WAAW,CAClB,MAAO,CAAAA,KAAK,EAAGC,SAAS,CAAEC,QAAQ,KAAO,OAAO,CAChD,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,IAAI,KAAM,SAAS,CAC1B,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,OAAO,KAAM,iBAAiB,CACrC,MAAO,CAAAC,IAAI,KAAM,cAAc,CAC/B,OAASC,WAAW,KAAQ,SAAS,CAErC;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAC1CD,SAAS,CAAC,IAAM,CACdmB,KAAK,CAAC,GAAG,CAAC,CACPC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,EAAKL,UAAU,CAACK,IAAI,CAAC,CAAC,CAChCC,KAAK,CAAEC,GAAG,EAAKC,OAAO,CAACC,GAAG,CAACV,OAAO,CAAC,CAAC,CACzC,CAAC,CAAE,EAAE,CAAC,CACN;AAGA,mBACEF,KAAA,CAACX,MAAM,EAAAwB,QAAA,eACLf,IAAA,CAACX,MAAM,GAAE,CAAC,cACVa,KAAA,CAACV,MAAM,EAAAuB,QAAA,eACLf,IAAA,CAACP,KAAK,EAACuB,IAAI,CAAC,GAAG,CAACC,KAAK,MAACC,OAAO,cAAElB,IAAA,CAACN,IAAI,GAAE,CAAE,CAAQ,CAAC,cACjDM,IAAA,CAACP,KAAK,EAACuB,IAAI,CAAC,OAAO,CAACE,OAAO,cAAElB,IAAA,CAACH,IAAI,GAAE,CAAE,CAAS,CAAC,cAChDG,IAAA,CAACP,KAAK,EAACuB,IAAI,CAAC,WAAW,CAACE,OAAO,cAAElB,IAAA,CAACL,QAAQ,GAAE,CAAE,CAAS,CAAC,cACxDK,IAAA,CAACP,KAAK,EAACuB,IAAI,CAAC,UAAU,CAACE,OAAO,cAAElB,IAAA,CAACJ,OAAO,GAAE,CAAE,CAAS,CAAC,EAChD,CAAC,EACH,CAAC,CAEb,CAEA,cAAe,CAAAO,GAAG,CAElB;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}